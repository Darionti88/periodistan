{"version":3,"sources":["../../src/use-popover.ts"],"names":["TRIGGER","click","hover","usePopover","props","closeOnBlur","closeOnEsc","initialFocusRef","placementProp","placement","flip","gutter","id","arrowSize","returnFocusOnClose","autoFocus","arrowShadowColorProp","arrowShadowColor","modifiers","trigger","openDelay","closeDelay","isLazy","isOpen","onClose","onOpen","onToggle","triggerRef","popoverRef","isHoveringRef","hasHeader","setHasHeader","hasBody","setHasBody","triggerId","popoverId","headerId","bodyId","fallbackShadowColor","shadowColor","popper","doc","isBrowser","current","elements","focusRef","visible","shouldFocus","getPopoverProps","_ref","popoverProps","style","transformOrigin","popperCSSVars","varRef","ref","children","tabIndex","role","onKeyDown","event","key","onBlur","relatedTarget","targetIsPopover","targetIsTrigger","isValidBlur","undefined","onMouseEnter","onMouseLeave","setTimeout","getPopoverPositionerProps","popperRef","visibility","openTimeout","closeTimeout","getTriggerProps","triggerProps","referenceRef","onClick","onFocus","window","clearTimeout","onTransitionEnd","dispatchEvent","Event","forceUpdate"],"mappings":"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","sourcesContent":["import {\n  useBoolean,\n  useDisclosure,\n  useFocusOnPointerDown,\n  useFocusOnHide,\n  useFocusOnShow,\n  useIds,\n} from \"@chakra-ui/hooks\"\nimport {\n  Placement,\n  popperCSSVars,\n  usePopper,\n  UsePopperProps,\n} from \"@chakra-ui/popper\"\nimport { useColorModeValue, useToken } from \"@chakra-ui/system\"\nimport {\n  callAllHandlers,\n  contains,\n  FocusableElement,\n  getOwnerDocument,\n  isBrowser,\n  px,\n} from \"@chakra-ui/utils\"\nimport {\n  mergeRefs,\n  getRelatedTarget,\n  HTMLProps,\n  PropGetter,\n} from \"@chakra-ui/react-utils\"\nimport { RefObject, useCallback, useEffect, useRef } from \"react\"\n\nconst TRIGGER = {\n  click: \"click\",\n  hover: \"hover\",\n} as const\n\nexport interface UsePopoverProps {\n  /**\n   * The html `id` attribute of the popover.\n   * If not provided, we generate a unique id.\n   *\n   * This `id` is also used to auto-generate the `aria-labelledby`\n   * and `aria-decribedby` attributes that points to the `PopoverHeader` and `PopoverBody`\n   */\n  id?: string\n  /**\n   * If `true`, the popover will be opened in controlled mode.\n   */\n  isOpen?: boolean\n  /**\n   * If `true`, the popover will be initially opened.\n   */\n  defaultIsOpen?: boolean\n  /**\n   * The `ref` of the element that should receive focus when the popover opens.\n   */\n  initialFocusRef?: RefObject<FocusableElement>\n  /**\n   * If `true`, focus will be returned to the element that triggers the popover\n   * when it closes\n   */\n  returnFocusOnClose?: boolean\n  /**\n   * If `true`, focus will be transferred to the first interactive element\n   * when the popover opens\n   */\n  autoFocus?: boolean\n  /**\n   * The gap (in pixels) to apply between the popover and the target.\n   * Used by `popper.js`\n   */\n  gutter?: number\n  /**\n   * The placement of the popover\n   */\n  placement?: Placement\n  /**\n   * The flip of the popover\n   */\n  flip?: boolean\n  /**\n   * If `true`, the popover will close when you blur out it by\n   * clicking outside or tabbing out\n   */\n  closeOnBlur?: boolean\n  /**\n   * If `true`, the popover will close when you hit the `Esc` key\n   */\n  closeOnEsc?: boolean\n  /**\n   * Callback fired when the popover opens\n   */\n  onOpen?: () => void\n  /**\n   * Callback fired when the popover closes\n   */\n  onClose?: () => void\n  /**\n   * The size of the popover arrow\n   */\n  arrowSize?: number\n  /**\n   * The `box-shadow` of the popover arrow\n   */\n  arrowShadowColor?: string\n  /**\n   * The Popper.js modifiers to use.\n   */\n  modifiers?: UsePopperProps[\"modifiers\"]\n  /**\n   * The interaction that triggers the popover.\n   *\n   * `hover` - means the popover will open when you hover with mouse or\n   * focus with keyboard on the popover trigger\n   *\n   * `click` - means the popover will open on click or\n   * press `Enter` to `Space` on keyboard\n   */\n  trigger?: keyof typeof TRIGGER\n  openDelay?: number\n  closeDelay?: number\n  /**\n   * Performance 🚀:\n   * If `true`, the PopoverContent rendering will be deferred\n   * until the popover is open.\n   */\n  isLazy?: boolean\n}\n\nexport function usePopover(props: UsePopoverProps = {}) {\n  const {\n    closeOnBlur = true,\n    closeOnEsc = true,\n    initialFocusRef,\n    placement: placementProp,\n    flip,\n    gutter,\n    id,\n    arrowSize,\n    returnFocusOnClose = true,\n    autoFocus = true,\n    arrowShadowColor: arrowShadowColorProp,\n    modifiers,\n    trigger = TRIGGER.click,\n    openDelay = 200,\n    closeDelay = 200,\n    isLazy,\n  } = props\n\n  const { isOpen, onClose, onOpen, onToggle } = useDisclosure(props)\n\n  const triggerRef = useRef<HTMLElement>(null)\n  const popoverRef = useRef<HTMLElement>(null)\n\n  const isHoveringRef = useRef(false)\n\n  const [hasHeader, setHasHeader] = useBoolean()\n  const [hasBody, setHasBody] = useBoolean()\n\n  const [triggerId, popoverId, headerId, bodyId] = useIds(\n    id,\n    \"popover-trigger\",\n    \"popover-content\",\n    \"popover-header\",\n    \"popover-body\",\n  )\n\n  const fallbackShadowColor = useColorModeValue(\"gray.200\", \"whiteAlpha.300\")\n  const shadowColor = arrowShadowColorProp ?? fallbackShadowColor\n  const arrowShadowColor = useToken(\"colors\", shadowColor, arrowShadowColorProp)\n\n  const popper = usePopper({\n    placement: placementProp,\n    flip,\n    gutter,\n    modifiers,\n  })\n\n  useFocusOnPointerDown({\n    doc: isBrowser ? getOwnerDocument(triggerRef.current) : null,\n    elements: [triggerRef],\n  })\n\n  useFocusOnHide(popoverRef, {\n    focusRef: triggerRef,\n    visible: isOpen,\n    shouldFocus: returnFocusOnClose && trigger === TRIGGER.click,\n  })\n\n  useFocusOnShow(popoverRef, {\n    focusRef: initialFocusRef,\n    visible: isOpen,\n    shouldFocus: autoFocus && trigger === TRIGGER.click,\n  })\n\n  const getPopoverProps: PropGetter = useCallback(\n    (props = {}, _ref = null) => {\n      const popoverProps: HTMLProps = {\n        ...props,\n        style: {\n          ...props.style,\n          transformOrigin: popperCSSVars.transformOrigin.varRef,\n        },\n        ref: mergeRefs(popoverRef, _ref),\n        children: !isLazy || isOpen ? props.children : null,\n        id: popoverId,\n        tabIndex: -1,\n        role: \"dialog\",\n        onKeyDown: callAllHandlers(props.onKeyDown, (event) => {\n          if (closeOnEsc && event.key === \"Escape\") {\n            onClose()\n          }\n        }),\n        onBlur: callAllHandlers(props.onBlur, (event) => {\n          const relatedTarget = getRelatedTarget(event)\n          const targetIsPopover = contains(popoverRef.current, relatedTarget)\n          const targetIsTrigger = contains(triggerRef.current, relatedTarget)\n          const isValidBlur = !targetIsPopover && !targetIsTrigger\n\n          if (isOpen && closeOnBlur && isValidBlur) {\n            onClose()\n          }\n        }),\n        \"aria-labelledby\": hasHeader ? headerId : undefined,\n        \"aria-describedby\": hasBody ? bodyId : undefined,\n      }\n\n      if (trigger === TRIGGER.hover) {\n        popoverProps.role = \"tooltip\"\n        popoverProps.onMouseEnter = callAllHandlers(props.onMouseEnter, () => {\n          isHoveringRef.current = true\n        })\n        popoverProps.onMouseLeave = callAllHandlers(props.onMouseLeave, () => {\n          isHoveringRef.current = false\n          setTimeout(onClose, closeDelay)\n        })\n      }\n\n      return popoverProps\n    },\n    [\n      isLazy,\n      isOpen,\n      popoverId,\n      hasHeader,\n      headerId,\n      hasBody,\n      bodyId,\n      trigger,\n      closeOnEsc,\n      onClose,\n      closeDelay,\n      closeOnBlur,\n    ],\n  )\n\n  const getPopoverPositionerProps: PropGetter = useCallback(\n    (props = {}, _ref = null) => ({\n      ...props,\n      ref: mergeRefs(popper.popperRef, _ref),\n      style: {\n        ...props.style,\n        [popperCSSVars.arrowSize.var]: arrowSize ? px(arrowSize) : undefined,\n        [popperCSSVars.arrowShadowColor.var]: arrowShadowColor,\n        visibility: isOpen ? \"visible\" : \"hidden\",\n      },\n    }),\n    [arrowShadowColor, arrowSize, isOpen, popper.popperRef],\n  )\n\n  const openTimeout = useRef<number>()\n  const closeTimeout = useRef<number>()\n\n  const getTriggerProps: PropGetter = useCallback(\n    (props = {}, _ref = null) => {\n      const triggerProps: HTMLProps = {\n        ...props,\n        ref: mergeRefs(triggerRef, _ref, popper.referenceRef),\n        id: triggerId,\n        \"aria-haspopup\": \"dialog\",\n        \"aria-expanded\": isOpen,\n        \"aria-controls\": popoverId,\n      }\n\n      if (trigger === TRIGGER.click) {\n        triggerProps.onClick = callAllHandlers(props.onClick, onToggle)\n      }\n\n      if (trigger === TRIGGER.hover) {\n        /**\n         * Any content that shows on pointer hover should also show on keyboard focus.\n         * Consider focus and blur to be the `hover` for keyboard users.\n         *\n         * @see https://www.w3.org/WAI/WCAG21/Understanding/content-on-hover-or-focus.html\n         */\n        triggerProps.onFocus = callAllHandlers(props.onFocus, onOpen)\n        triggerProps.onBlur = callAllHandlers(props.onBlur, onClose)\n\n        /**\n         * Any content that shows on hover or focus must be dismissible.\n         * This case pressing `Escape` will dismiss the popover\n         */\n        triggerProps.onKeyDown = callAllHandlers(props.onKeyDown, (event) => {\n          if (event.key === \"Escape\") {\n            onClose()\n          }\n        })\n\n        triggerProps.onMouseEnter = callAllHandlers(props.onMouseEnter, () => {\n          isHoveringRef.current = true\n          openTimeout.current = window.setTimeout(onOpen, openDelay)\n        })\n\n        triggerProps.onMouseLeave = callAllHandlers(props.onMouseLeave, () => {\n          isHoveringRef.current = false\n\n          if (openTimeout.current) {\n            clearTimeout(openTimeout.current)\n            openTimeout.current = undefined\n          }\n\n          closeTimeout.current = window.setTimeout(() => {\n            if (isHoveringRef.current === false) {\n              onClose()\n            }\n          }, closeDelay)\n        })\n      }\n\n      return triggerProps\n    },\n    [\n      triggerId,\n      isOpen,\n      popoverId,\n      trigger,\n      popper.referenceRef,\n      onToggle,\n      onOpen,\n      onClose,\n      openDelay,\n      closeDelay,\n    ],\n  )\n\n  useEffect(\n    () => () => {\n      if (openTimeout.current) clearTimeout(openTimeout.current)\n      if (closeTimeout.current) clearTimeout(closeTimeout.current)\n    },\n    [],\n  )\n\n  const onTransitionEnd = () => {\n    popoverRef.current?.dispatchEvent(new Event(\"transitionend\"))\n  }\n\n  return {\n    forceUpdate: popper.forceUpdate,\n    isOpen,\n    onClose,\n    headerId,\n    hasHeader,\n    setHasHeader,\n    bodyId,\n    hasBody,\n    setHasBody,\n    onTransitionEnd,\n    getPopoverPositionerProps,\n    getPopoverProps,\n    getTriggerProps,\n  }\n}\n\nexport type UsePopoverReturn = ReturnType<typeof usePopover>\n"],"file":"use-popover.js"}