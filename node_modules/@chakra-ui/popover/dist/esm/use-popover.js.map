{"version":3,"sources":["../../src/use-popover.ts"],"names":["useBoolean","useDisclosure","useFocusOnPointerDown","useFocusOnHide","useFocusOnShow","useIds","popperCSSVars","usePopper","useColorModeValue","useToken","callAllHandlers","contains","getOwnerDocument","isBrowser","px","mergeRefs","getRelatedTarget","useCallback","useEffect","useRef","TRIGGER","click","hover","usePopover","props","closeOnBlur","closeOnEsc","initialFocusRef","placement","placementProp","flip","gutter","id","arrowSize","returnFocusOnClose","autoFocus","arrowShadowColor","arrowShadowColorProp","modifiers","trigger","openDelay","closeDelay","isLazy","isOpen","onClose","onOpen","onToggle","triggerRef","popoverRef","isHoveringRef","hasHeader","setHasHeader","hasBody","setHasBody","triggerId","popoverId","headerId","bodyId","fallbackShadowColor","shadowColor","popper","doc","current","elements","focusRef","visible","shouldFocus","getPopoverProps","_ref","popoverProps","style","transformOrigin","varRef","ref","children","tabIndex","role","onKeyDown","event","key","onBlur","relatedTarget","targetIsPopover","targetIsTrigger","isValidBlur","undefined","onMouseEnter","onMouseLeave","setTimeout","getPopoverPositionerProps","popperRef","var","visibility","openTimeout","closeTimeout","getTriggerProps","triggerProps","referenceRef","onClick","onFocus","window","clearTimeout","onTransitionEnd","dispatchEvent","Event","forceUpdate"],"mappings":"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","sourcesContent":["import {\n  useBoolean,\n  useDisclosure,\n  useFocusOnPointerDown,\n  useFocusOnHide,\n  useFocusOnShow,\n  useIds,\n} from \"@chakra-ui/hooks\"\nimport {\n  Placement,\n  popperCSSVars,\n  usePopper,\n  UsePopperProps,\n} from \"@chakra-ui/popper\"\nimport { useColorModeValue, useToken } from \"@chakra-ui/system\"\nimport {\n  callAllHandlers,\n  contains,\n  FocusableElement,\n  getOwnerDocument,\n  isBrowser,\n  px,\n} from \"@chakra-ui/utils\"\nimport {\n  mergeRefs,\n  getRelatedTarget,\n  HTMLProps,\n  PropGetter,\n} from \"@chakra-ui/react-utils\"\nimport { RefObject, useCallback, useEffect, useRef } from \"react\"\n\nconst TRIGGER = {\n  click: \"click\",\n  hover: \"hover\",\n} as const\n\nexport interface UsePopoverProps {\n  /**\n   * The html `id` attribute of the popover.\n   * If not provided, we generate a unique id.\n   *\n   * This `id` is also used to auto-generate the `aria-labelledby`\n   * and `aria-decribedby` attributes that points to the `PopoverHeader` and `PopoverBody`\n   */\n  id?: string\n  /**\n   * If `true`, the popover will be opened in controlled mode.\n   */\n  isOpen?: boolean\n  /**\n   * If `true`, the popover will be initially opened.\n   */\n  defaultIsOpen?: boolean\n  /**\n   * The `ref` of the element that should receive focus when the popover opens.\n   */\n  initialFocusRef?: RefObject<FocusableElement>\n  /**\n   * If `true`, focus will be returned to the element that triggers the popover\n   * when it closes\n   */\n  returnFocusOnClose?: boolean\n  /**\n   * If `true`, focus will be transferred to the first interactive element\n   * when the popover opens\n   */\n  autoFocus?: boolean\n  /**\n   * The gap (in pixels) to apply between the popover and the target.\n   * Used by `popper.js`\n   */\n  gutter?: number\n  /**\n   * The placement of the popover\n   */\n  placement?: Placement\n  /**\n   * The flip of the popover\n   */\n  flip?: boolean\n  /**\n   * If `true`, the popover will close when you blur out it by\n   * clicking outside or tabbing out\n   */\n  closeOnBlur?: boolean\n  /**\n   * If `true`, the popover will close when you hit the `Esc` key\n   */\n  closeOnEsc?: boolean\n  /**\n   * Callback fired when the popover opens\n   */\n  onOpen?: () => void\n  /**\n   * Callback fired when the popover closes\n   */\n  onClose?: () => void\n  /**\n   * The size of the popover arrow\n   */\n  arrowSize?: number\n  /**\n   * The `box-shadow` of the popover arrow\n   */\n  arrowShadowColor?: string\n  /**\n   * The Popper.js modifiers to use.\n   */\n  modifiers?: UsePopperProps[\"modifiers\"]\n  /**\n   * The interaction that triggers the popover.\n   *\n   * `hover` - means the popover will open when you hover with mouse or\n   * focus with keyboard on the popover trigger\n   *\n   * `click` - means the popover will open on click or\n   * press `Enter` to `Space` on keyboard\n   */\n  trigger?: keyof typeof TRIGGER\n  openDelay?: number\n  closeDelay?: number\n  /**\n   * Performance 🚀:\n   * If `true`, the PopoverContent rendering will be deferred\n   * until the popover is open.\n   */\n  isLazy?: boolean\n}\n\nexport function usePopover(props: UsePopoverProps = {}) {\n  const {\n    closeOnBlur = true,\n    closeOnEsc = true,\n    initialFocusRef,\n    placement: placementProp,\n    flip,\n    gutter,\n    id,\n    arrowSize,\n    returnFocusOnClose = true,\n    autoFocus = true,\n    arrowShadowColor: arrowShadowColorProp,\n    modifiers,\n    trigger = TRIGGER.click,\n    openDelay = 200,\n    closeDelay = 200,\n    isLazy,\n  } = props\n\n  const { isOpen, onClose, onOpen, onToggle } = useDisclosure(props)\n\n  const triggerRef = useRef<HTMLElement>(null)\n  const popoverRef = useRef<HTMLElement>(null)\n\n  const isHoveringRef = useRef(false)\n\n  const [hasHeader, setHasHeader] = useBoolean()\n  const [hasBody, setHasBody] = useBoolean()\n\n  const [triggerId, popoverId, headerId, bodyId] = useIds(\n    id,\n    \"popover-trigger\",\n    \"popover-content\",\n    \"popover-header\",\n    \"popover-body\",\n  )\n\n  const fallbackShadowColor = useColorModeValue(\"gray.200\", \"whiteAlpha.300\")\n  const shadowColor = arrowShadowColorProp ?? fallbackShadowColor\n  const arrowShadowColor = useToken(\"colors\", shadowColor, arrowShadowColorProp)\n\n  const popper = usePopper({\n    placement: placementProp,\n    flip,\n    gutter,\n    modifiers,\n  })\n\n  useFocusOnPointerDown({\n    doc: isBrowser ? getOwnerDocument(triggerRef.current) : null,\n    elements: [triggerRef],\n  })\n\n  useFocusOnHide(popoverRef, {\n    focusRef: triggerRef,\n    visible: isOpen,\n    shouldFocus: returnFocusOnClose && trigger === TRIGGER.click,\n  })\n\n  useFocusOnShow(popoverRef, {\n    focusRef: initialFocusRef,\n    visible: isOpen,\n    shouldFocus: autoFocus && trigger === TRIGGER.click,\n  })\n\n  const getPopoverProps: PropGetter = useCallback(\n    (props = {}, _ref = null) => {\n      const popoverProps: HTMLProps = {\n        ...props,\n        style: {\n          ...props.style,\n          transformOrigin: popperCSSVars.transformOrigin.varRef,\n        },\n        ref: mergeRefs(popoverRef, _ref),\n        children: !isLazy || isOpen ? props.children : null,\n        id: popoverId,\n        tabIndex: -1,\n        role: \"dialog\",\n        onKeyDown: callAllHandlers(props.onKeyDown, (event) => {\n          if (closeOnEsc && event.key === \"Escape\") {\n            onClose()\n          }\n        }),\n        onBlur: callAllHandlers(props.onBlur, (event) => {\n          const relatedTarget = getRelatedTarget(event)\n          const targetIsPopover = contains(popoverRef.current, relatedTarget)\n          const targetIsTrigger = contains(triggerRef.current, relatedTarget)\n          const isValidBlur = !targetIsPopover && !targetIsTrigger\n\n          if (isOpen && closeOnBlur && isValidBlur) {\n            onClose()\n          }\n        }),\n        \"aria-labelledby\": hasHeader ? headerId : undefined,\n        \"aria-describedby\": hasBody ? bodyId : undefined,\n      }\n\n      if (trigger === TRIGGER.hover) {\n        popoverProps.role = \"tooltip\"\n        popoverProps.onMouseEnter = callAllHandlers(props.onMouseEnter, () => {\n          isHoveringRef.current = true\n        })\n        popoverProps.onMouseLeave = callAllHandlers(props.onMouseLeave, () => {\n          isHoveringRef.current = false\n          setTimeout(onClose, closeDelay)\n        })\n      }\n\n      return popoverProps\n    },\n    [\n      isLazy,\n      isOpen,\n      popoverId,\n      hasHeader,\n      headerId,\n      hasBody,\n      bodyId,\n      trigger,\n      closeOnEsc,\n      onClose,\n      closeDelay,\n      closeOnBlur,\n    ],\n  )\n\n  const getPopoverPositionerProps: PropGetter = useCallback(\n    (props = {}, _ref = null) => ({\n      ...props,\n      ref: mergeRefs(popper.popperRef, _ref),\n      style: {\n        ...props.style,\n        [popperCSSVars.arrowSize.var]: arrowSize ? px(arrowSize) : undefined,\n        [popperCSSVars.arrowShadowColor.var]: arrowShadowColor,\n        visibility: isOpen ? \"visible\" : \"hidden\",\n      },\n    }),\n    [arrowShadowColor, arrowSize, isOpen, popper.popperRef],\n  )\n\n  const openTimeout = useRef<number>()\n  const closeTimeout = useRef<number>()\n\n  const getTriggerProps: PropGetter = useCallback(\n    (props = {}, _ref = null) => {\n      const triggerProps: HTMLProps = {\n        ...props,\n        ref: mergeRefs(triggerRef, _ref, popper.referenceRef),\n        id: triggerId,\n        \"aria-haspopup\": \"dialog\",\n        \"aria-expanded\": isOpen,\n        \"aria-controls\": popoverId,\n      }\n\n      if (trigger === TRIGGER.click) {\n        triggerProps.onClick = callAllHandlers(props.onClick, onToggle)\n      }\n\n      if (trigger === TRIGGER.hover) {\n        /**\n         * Any content that shows on pointer hover should also show on keyboard focus.\n         * Consider focus and blur to be the `hover` for keyboard users.\n         *\n         * @see https://www.w3.org/WAI/WCAG21/Understanding/content-on-hover-or-focus.html\n         */\n        triggerProps.onFocus = callAllHandlers(props.onFocus, onOpen)\n        triggerProps.onBlur = callAllHandlers(props.onBlur, onClose)\n\n        /**\n         * Any content that shows on hover or focus must be dismissible.\n         * This case pressing `Escape` will dismiss the popover\n         */\n        triggerProps.onKeyDown = callAllHandlers(props.onKeyDown, (event) => {\n          if (event.key === \"Escape\") {\n            onClose()\n          }\n        })\n\n        triggerProps.onMouseEnter = callAllHandlers(props.onMouseEnter, () => {\n          isHoveringRef.current = true\n          openTimeout.current = window.setTimeout(onOpen, openDelay)\n        })\n\n        triggerProps.onMouseLeave = callAllHandlers(props.onMouseLeave, () => {\n          isHoveringRef.current = false\n\n          if (openTimeout.current) {\n            clearTimeout(openTimeout.current)\n            openTimeout.current = undefined\n          }\n\n          closeTimeout.current = window.setTimeout(() => {\n            if (isHoveringRef.current === false) {\n              onClose()\n            }\n          }, closeDelay)\n        })\n      }\n\n      return triggerProps\n    },\n    [\n      triggerId,\n      isOpen,\n      popoverId,\n      trigger,\n      popper.referenceRef,\n      onToggle,\n      onOpen,\n      onClose,\n      openDelay,\n      closeDelay,\n    ],\n  )\n\n  useEffect(\n    () => () => {\n      if (openTimeout.current) clearTimeout(openTimeout.current)\n      if (closeTimeout.current) clearTimeout(closeTimeout.current)\n    },\n    [],\n  )\n\n  const onTransitionEnd = () => {\n    popoverRef.current?.dispatchEvent(new Event(\"transitionend\"))\n  }\n\n  return {\n    forceUpdate: popper.forceUpdate,\n    isOpen,\n    onClose,\n    headerId,\n    hasHeader,\n    setHasHeader,\n    bodyId,\n    hasBody,\n    setHasBody,\n    onTransitionEnd,\n    getPopoverPositionerProps,\n    getPopoverProps,\n    getTriggerProps,\n  }\n}\n\nexport type UsePopoverReturn = ReturnType<typeof usePopover>\n"],"file":"use-popover.js"}