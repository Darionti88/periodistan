{"version":3,"sources":["../../src/popover.tsx"],"names":["CloseButton","chakra","forwardRef","omitThemingProps","StylesProvider","useMultiStyleConfig","useStyles","cx","runIfFn","__DEV__","createContext","motion","React","usePopover","motionVariants","exit","opacity","scale","transition","duration","ease","transitionEnd","visibility","enter","PopoverProvider","usePopoverContext","name","errorMessage","Popover","props","styles","children","rest","context","isOpen","onClose","forceUpdate","displayName","PopoverTrigger","child","Children","only","getTriggerProps","cloneElement","ref","Motion","section","PopoverContent","getPopoverProps","onTransitionEnd","getPopoverPositionerProps","contentStyles","position","display","flexDirection","content","popoverProps","popper","className","PopoverHeader","headerId","setHasHeader","useEffect","on","off","header","PopoverBody","bodyId","setHasBody","body","PopoverFooter","footer","PopoverCloseButton","PopoverArrow","bg","bgColor","backgroundColor","arrowBg","arrow"],"mappings":";;;;AAAA,SAASA,WAAT,QAA8C,yBAA9C;AACA,SACEC,MADF,EAEEC,UAFF,EAGEC,gBAHF,EAIEC,cAJF,EAOEC,mBAPF,EAQEC,SARF,QAUO,mBAVP;AAWA,SAASC,EAAT,EAAaC,OAAb,EAAsBC,OAAtB,QAAqC,kBAArC;AACA,SAASC,aAAT,QAA+C,wBAA/C;AACA,SAASC,MAAT,QAAiC,eAAjC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA8D,eAA9D;AAEA,IAAMC,cAAwB,GAAG;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,CADL;AAEJC,IAAAA,KAAK,EAAE,IAFH;AAGJC,IAAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE,GADA;AAEVC,MAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,EAAY,CAAZ;AAFI,KAHR;AAOJC,IAAAA,aAAa,EAAE;AACbC,MAAAA,UAAU,EAAE;AADC;AAPX,GADyB;AAY/BC,EAAAA,KAAK,EAAE;AACLD,IAAAA,UAAU,EAAE,SADP;AAELL,IAAAA,KAAK,EAAE,CAFF;AAGLD,IAAAA,OAAO,EAAE,CAHJ;AAILE,IAAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE,IADA;AAEVC,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,EAAY,CAAZ;AAFI;AAJP;AAZwB,CAAjC;AAuBA,IAAM,CAACI,eAAD,EAAkBC,iBAAlB,IAAuCf,aAAa,CAAmB;AAC3EgB,EAAAA,IAAI,EAAE,gBADqE;AAE3EC,EAAAA,YAAY,EACV;AAHyE,CAAnB,CAA1D;AAMA,SAASF,iBAAT;;AAcA;AACA;AACA;AACA;AACA,OAAO,IAAMG,OAA+B,GAAIC,KAAD,IAAW;AACxD,MAAMC,MAAM,GAAGzB,mBAAmB,CAAC,SAAD,EAAYwB,KAAZ,CAAlC;;AAEA,0BAA8B1B,gBAAgB,CAAC0B,KAAD,CAA9C;AAAA,MAAM;AAAEE,IAAAA;AAAF,GAAN;AAAA,MAAqBC,IAArB;;AACA,MAAMC,OAAO,GAAGpB,UAAU,CAACmB,IAAD,CAA1B;AAEA,sBACE,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAEC;AAAxB,kBACE,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAEH;AAAvB,KACGtB,OAAO,CAACuB,QAAD,EAAW;AACjBG,IAAAA,MAAM,EAAED,OAAO,CAACC,MADC;AAEjBC,IAAAA,OAAO,EAAEF,OAAO,CAACE,OAFA;AAGjBC,IAAAA,WAAW,EAAEH,OAAO,CAACG;AAHJ,GAAX,CADV,CADF,CADF;AAWD,CAjBM;;AAmBP,IAAI3B,OAAJ,EAAa;AACXmB,EAAAA,OAAO,CAACS,WAAR,GAAsB,SAAtB;AACD;AAED;AACA;AACA;AACA;;;AACA,OAAO,IAAMC,cAAwB,GAAIT,KAAD,IAAW;AACjD;AACA,MAAMU,KAAU,GAAG3B,KAAK,CAAC4B,QAAN,CAAeC,IAAf,CAAoBZ,KAAK,CAACE,QAA1B,CAAnB;AACA,MAAM;AAAEW,IAAAA;AAAF,MAAsBjB,iBAAiB,EAA7C;AACA,sBAAOb,KAAK,CAAC+B,YAAN,CAAmBJ,KAAnB,EAA0BG,eAAe,CAACH,KAAK,CAACV,KAAP,EAAcU,KAAK,CAACK,GAApB,CAAzC,CAAP;AACD,CALM;;AAOP,IAAInC,OAAJ,EAAa;AACX6B,EAAAA,cAAc,CAACD,WAAf,GAA6B,gBAA7B;AACD;;AAID,IAAMQ,MAAM,GAAG5C,MAAM,CAACU,MAAM,CAACmC,OAAR,CAArB;AAEA,OAAO,IAAMC,cAAc,gBAAG7C,UAAU,CACtC,CAAC2B,KAAD,EAAQe,GAAR,KAAgB;AACd,MAAM;AACJV,IAAAA,MADI;AAEJc,IAAAA,eAFI;AAGJC,IAAAA,eAHI;AAIJC,IAAAA;AAJI,MAKFzB,iBAAiB,EALrB;AAOA,MAAMK,MAAM,GAAGxB,SAAS,EAAxB;;AACA,MAAM6C,aAAgC;AACpCC,IAAAA,QAAQ,EAAE,UAD0B;AAEpCC,IAAAA,OAAO,EAAE,MAF2B;AAGpCC,IAAAA,aAAa,EAAE;AAHqB,KAIjCxB,MAAM,CAACyB,OAJ0B,CAAtC;;AAOA,MAAMC,YAAiB,GAAGR,eAAe,CAACnB,KAAD,EAAQe,GAAR,CAAzC;AAEA,sBACE,oBAAC,MAAD,CAAQ,GAAR;AAAY,IAAA,KAAK,EAAEd,MAAM,CAAC2B;AAA1B,KAAsCP,yBAAyB,EAA/D,gBACE,oBAAC,MAAD,eACMM,YADN;AAEE,IAAA,QAAQ,EAAEP,eAFZ;AAGE,IAAA,SAAS,EAAE1C,EAAE,CAAC,yBAAD,EAA4BsB,KAAK,CAAC6B,SAAlC,CAHf;AAIE,IAAA,KAAK,EAAEP,aAJT;AAKE,IAAA,QAAQ,EAAErC,cALZ;AAME,IAAA,OAAO,EAAE,KANX;AAOE,IAAA,OAAO,EAAEoB,MAAM,GAAG,OAAH,GAAa;AAP9B,KADF,CADF;AAaD,CAhCqC,CAAjC;;AAmCP,IAAIzB,OAAJ,EAAa;AACXsC,EAAAA,cAAc,CAACV,WAAf,GAA6B,gBAA7B;AACD;;AAID;AACA;AACA;AACA;AACA,OAAO,IAAMsB,aAAa,gBAAGzD,UAAU,CACrC,CAAC2B,KAAD,EAAQe,GAAR,KAAgB;AACd,MAAM;AAAEgB,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BpC,iBAAiB,EAApD;AAEAb,EAAAA,KAAK,CAACkD,SAAN,CAAgB,MAAM;AACpBD,IAAAA,YAAY,CAACE,EAAb;AACA,WAAO,MAAMF,YAAY,CAACG,GAAb,EAAb;AACD,GAHD,EAGG,CAACH,YAAD,CAHH;AAKA,MAAM/B,MAAM,GAAGxB,SAAS,EAAxB;AAEA,sBACE,oBAAC,MAAD,CAAQ,MAAR,eACMuB,KADN;AAEE,IAAA,SAAS,EAAEtB,EAAE,CAAC,wBAAD,EAA2BsB,KAAK,CAAC6B,SAAjC,CAFf;AAGE,IAAA,EAAE,EAAEE,QAHN;AAIE,IAAA,GAAG,EAAEhB,GAJP;AAKE,IAAA,KAAK,EAAEd,MAAM,CAACmC;AALhB,KADF;AASD,CApBoC,CAAhC;;AAuBP,IAAIxD,OAAJ,EAAa;AACXkD,EAAAA,aAAa,CAACtB,WAAd,GAA4B,eAA5B;AACD;;AAID;AACA;AACA;AACA;AACA,OAAO,IAAM6B,WAAW,gBAAGhE,UAAU,CAA0B,CAAC2B,KAAD,EAAQe,GAAR,KAAgB;AAC7E,MAAM;AAAEuB,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAyB3C,iBAAiB,EAAhD;AAEAb,EAAAA,KAAK,CAACkD,SAAN,CAAgB,MAAM;AACpBM,IAAAA,UAAU,CAACL,EAAX;AACA,WAAO,MAAMK,UAAU,CAACJ,GAAX,EAAb;AACD,GAHD,EAGG,CAACI,UAAD,CAHH;AAKA,MAAMtC,MAAM,GAAGxB,SAAS,EAAxB;AAEA,sBACE,oBAAC,MAAD,CAAQ,GAAR,eACMuB,KADN;AAEE,IAAA,SAAS,EAAEtB,EAAE,CAAC,sBAAD,EAAyBsB,KAAK,CAAC6B,SAA/B,CAFf;AAGE,IAAA,EAAE,EAAES,MAHN;AAIE,IAAA,GAAG,EAAEvB,GAJP;AAKE,IAAA,KAAK,EAAEd,MAAM,CAACuC;AALhB,KADF;AASD,CAnBoC,CAA9B;;AAqBP,IAAI5D,OAAJ,EAAa;AACXyD,EAAAA,WAAW,CAAC7B,WAAZ,GAA0B,aAA1B;AACD;;AAGD,OAAO,IAAMiC,aAA2C,GAAIzC,KAAD,IAAW;AACpE,MAAMC,MAAM,GAAGxB,SAAS,EAAxB;AACA,sBACE,oBAAC,MAAD,CAAQ,MAAR,eACMuB,KADN;AAEE,IAAA,SAAS,EAAEtB,EAAE,CAAC,wBAAD,EAA2BsB,KAAK,CAAC6B,SAAjC,CAFf;AAGE,IAAA,KAAK,EAAE5B,MAAM,CAACyC;AAHhB,KADF;AAOD,CATM;;AAWP,IAAI9D,OAAJ,EAAa;AACX6D,EAAAA,aAAa,CAACjC,WAAd,GAA4B,eAA5B;AACD;;AAID,OAAO,IAAMmC,kBAA8C,GAAI3C,KAAD,IAAW;AACvE,MAAM;AAAEM,IAAAA;AAAF,MAAcV,iBAAiB,EAArC;AACA,sBACE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,OAAO,EAAEU,OAFX;AAGE,IAAA,QAAQ,EAAC,UAHX;AAIE,IAAA,YAAY,EAAC,IAJf;AAKE,IAAA,GAAG,EAAC,SALN;AAME,IAAA,KAAK,EAAC,QANR;AAOE,IAAA,OAAO,EAAC;AAPV,KAQMN,KARN,EADF;AAYD,CAdM;;AAgBP,IAAIpB,OAAJ,EAAa;AACX+D,EAAAA,kBAAkB,CAACnC,WAAnB,GAAiC,oBAAjC;AACD;;AAID,OAAO,IAAMoC,YAAyC,GAAI5C,KAAD,IAAW;AAAA;;AAClE,MAAM;AAAE6C,IAAAA,EAAF;AAAMC,IAAAA,OAAN;AAAeC,IAAAA;AAAf,MAAmC/C,KAAzC;AACA,MAAMC,MAAM,GAAGxB,SAAS,EAAxB;AACA,MAAMuE,OAAO,WAAGH,EAAH,WAAGA,EAAH,GAASC,OAAT,mBAAoBC,eAAjC;AACA,sBACE,oBAAC,MAAD,CAAQ,GAAR;AAAY,6BAAZ;AAA8B,IAAA,SAAS,EAAC;AAAxC,kBACE,oBAAC,MAAD,CAAQ,GAAR;AACE,IAAA,SAAS,EAAErE,EAAE,CAAC,uBAAD,EAA0BsB,KAAK,CAAC6B,SAAhC;AADf,KAEM7B,KAFN;AAGE,mCAHF;AAIE,IAAA,KAAK,eACAC,MAAM,CAACgD,KADP,EAECD,OAAO,IAAI;AACb,uCAA+BA,OAA/B,UAA2CA;AAD9B,KAFZ;AAJP,KADF,CADF;AAeD,CAnBM;;AAqBP,IAAIpE,OAAJ,EAAa;AACXgE,EAAAA,YAAY,CAACpC,WAAb,GAA2B,cAA3B;AACD","sourcesContent":["import { CloseButton, CloseButtonProps } from \"@chakra-ui/close-button\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  StylesProvider,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, runIfFn, __DEV__ } from \"@chakra-ui/utils\"\nimport { createContext, MaybeRenderProp } from \"@chakra-ui/react-utils\"\nimport { motion, Variants } from \"framer-motion\"\nimport * as React from \"react\"\nimport { usePopover, UsePopoverProps, UsePopoverReturn } from \"./use-popover\"\n\nconst motionVariants: Variants = {\n  exit: {\n    opacity: 0,\n    scale: 0.95,\n    transition: {\n      duration: 0.1,\n      ease: [0.4, 0, 1, 1],\n    },\n    transitionEnd: {\n      visibility: \"hidden\",\n    },\n  },\n  enter: {\n    visibility: \"visible\",\n    scale: 1,\n    opacity: 1,\n    transition: {\n      duration: 0.15,\n      ease: [0, 0, 0.2, 1],\n    },\n  },\n}\n\nconst [PopoverProvider, usePopoverContext] = createContext<UsePopoverReturn>({\n  name: \"PopoverContext\",\n  errorMessage:\n    \"usePopoverContext: `context` is undefined. Seems you forgot to wrap all popover components within `<Popover />`\",\n})\n\nexport { usePopoverContext }\n\nexport interface PopoverProps extends UsePopoverProps, ThemingProps<\"Popover\"> {\n  /**\n   * The content of the popover. It is usually the `PopoverTrigger`,\n   * and `PopoverContent`\n   */\n  children?: MaybeRenderProp<{\n    isOpen: boolean\n    onClose: () => void\n    forceUpdate: (() => void) | undefined\n  }>\n}\n\n/**\n * Popover is used to bring attention to specific user interface elements,\n * typically to suggest an action or to guide users through a new experience.\n */\nexport const Popover: React.FC<PopoverProps> = (props) => {\n  const styles = useMultiStyleConfig(\"Popover\", props)\n\n  const { children, ...rest } = omitThemingProps(props)\n  const context = usePopover(rest)\n\n  return (\n    <PopoverProvider value={context}>\n      <StylesProvider value={styles}>\n        {runIfFn(children, {\n          isOpen: context.isOpen,\n          onClose: context.onClose,\n          forceUpdate: context.forceUpdate,\n        })}\n      </StylesProvider>\n    </PopoverProvider>\n  )\n}\n\nif (__DEV__) {\n  Popover.displayName = \"Popover\"\n}\n\n/**\n * PopoverTrigger opens the popover's content. It must be an interactive element\n * such as `button` or `a`.\n */\nexport const PopoverTrigger: React.FC = (props) => {\n  // enforce a single child\n  const child: any = React.Children.only(props.children)\n  const { getTriggerProps } = usePopoverContext()\n  return React.cloneElement(child, getTriggerProps(child.props, child.ref))\n}\n\nif (__DEV__) {\n  PopoverTrigger.displayName = \"PopoverTrigger\"\n}\n\nexport interface PopoverContentProps extends HTMLChakraProps<\"section\"> {}\n\nconst Motion = chakra(motion.section)\n\nexport const PopoverContent = forwardRef<PopoverContentProps, \"section\">(\n  (props, ref) => {\n    const {\n      isOpen,\n      getPopoverProps,\n      onTransitionEnd,\n      getPopoverPositionerProps,\n    } = usePopoverContext()\n\n    const styles = useStyles()\n    const contentStyles: SystemStyleObject = {\n      position: \"relative\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      ...styles.content,\n    }\n\n    const popoverProps: any = getPopoverProps(props, ref)\n\n    return (\n      <chakra.div __css={styles.popper} {...getPopoverPositionerProps()}>\n        <Motion\n          {...popoverProps}\n          onUpdate={onTransitionEnd}\n          className={cx(\"chakra-popover__content\", props.className)}\n          __css={contentStyles}\n          variants={motionVariants}\n          initial={false}\n          animate={isOpen ? \"enter\" : \"exit\"}\n        />\n      </chakra.div>\n    )\n  },\n)\n\nif (__DEV__) {\n  PopoverContent.displayName = \"PopoverContent\"\n}\n\nexport interface PopoverHeaderProps extends HTMLChakraProps<\"header\"> {}\n\n/**\n * PopoverHeader is the accessible header or label\n * for the popover's content and it is first announced by screenreaders.\n */\nexport const PopoverHeader = forwardRef<PopoverHeaderProps, \"header\">(\n  (props, ref) => {\n    const { headerId, setHasHeader } = usePopoverContext()\n\n    React.useEffect(() => {\n      setHasHeader.on()\n      return () => setHasHeader.off()\n    }, [setHasHeader])\n\n    const styles = useStyles()\n\n    return (\n      <chakra.header\n        {...props}\n        className={cx(\"chakra-popover__header\", props.className)}\n        id={headerId}\n        ref={ref}\n        __css={styles.header}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  PopoverHeader.displayName = \"PopoverHeader\"\n}\n\nexport interface PopoverBodyProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * PopoverBody is the main content area for the popover. Should contain\n * at least one interactive element.\n */\nexport const PopoverBody = forwardRef<PopoverBodyProps, \"div\">((props, ref) => {\n  const { bodyId, setHasBody } = usePopoverContext()\n\n  React.useEffect(() => {\n    setHasBody.on()\n    return () => setHasBody.off()\n  }, [setHasBody])\n\n  const styles = useStyles()\n\n  return (\n    <chakra.div\n      {...props}\n      className={cx(\"chakra-popover__body\", props.className)}\n      id={bodyId}\n      ref={ref}\n      __css={styles.body}\n    />\n  )\n})\n\nif (__DEV__) {\n  PopoverBody.displayName = \"PopoverBody\"\n}\nexport interface PopoverFooterProps extends HTMLChakraProps<\"footer\"> {}\n\nexport const PopoverFooter: React.FC<PopoverFooterProps> = (props) => {\n  const styles = useStyles()\n  return (\n    <chakra.footer\n      {...props}\n      className={cx(\"chakra-popover__footer\", props.className)}\n      __css={styles.footer}\n    />\n  )\n}\n\nif (__DEV__) {\n  PopoverFooter.displayName = \"PopoverFooter\"\n}\n\nexport type PopoverCloseButtonProps = CloseButtonProps\n\nexport const PopoverCloseButton: React.FC<CloseButtonProps> = (props) => {\n  const { onClose } = usePopoverContext()\n  return (\n    <CloseButton\n      size=\"sm\"\n      onClick={onClose}\n      position=\"absolute\"\n      borderRadius=\"md\"\n      top=\"0.25rem\"\n      right=\"0.5rem\"\n      padding=\"0.5rem\"\n      {...props}\n    />\n  )\n}\n\nif (__DEV__) {\n  PopoverCloseButton.displayName = \"PopoverCloseButton\"\n}\n\nexport interface PopoverArrowProps extends HTMLChakraProps<\"div\"> {}\n\nexport const PopoverArrow: React.FC<PopoverArrowProps> = (props) => {\n  const { bg, bgColor, backgroundColor } = props\n  const styles = useStyles()\n  const arrowBg = bg ?? bgColor ?? backgroundColor\n  return (\n    <chakra.div data-popper-arrow className=\"chakra-popover__arrow-positioner\">\n      <chakra.div\n        className={cx(\"chakra-popover__arrow\", props.className)}\n        {...props}\n        data-popper-arrow-inner\n        __css={{\n          ...styles.arrow,\n          ...(arrowBg && {\n            \"--popper-arrow-bg\": `colors.${arrowBg}, ${arrowBg}`,\n          }),\n        }}\n      />\n    </chakra.div>\n  )\n}\n\nif (__DEV__) {\n  PopoverArrow.displayName = \"PopoverArrow\"\n}\n"],"file":"popover.js"}