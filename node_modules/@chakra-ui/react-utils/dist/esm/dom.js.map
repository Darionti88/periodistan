{"version":3,"sources":["../../src/dom.ts"],"names":["normalizeEventKey","event","key","keyCode","isArrowKey","indexOf","eventKey","getRelatedTarget","relatedTarget","nativeEvent","explicitOriginalTarget","document","activeElement","isRightClick","button"],"mappings":"AAEA;AACA;AACA;AACA;AACA,OAAO,SAASA,iBAAT,CAA2BC,KAA3B,EAAuD;AAC5D,MAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAmBF,KAAzB;AAEA,MAAMG,UAAU,GACdD,OAAO,IAAI,EAAX,IAAiBA,OAAO,IAAI,EAA5B,IAAkCD,GAAG,CAACG,OAAJ,CAAY,OAAZ,MAAyB,CAD7D;AAGA,MAAMC,QAAQ,GAAGF,UAAU,aAAWF,GAAX,GAAmBA,GAA9C;AAEA,SAAOI,QAAP;AACD;AAED,OAAO,SAASC,gBAAT,CACLN,KADK,EAEL;AACA,SAAQA,KAAK,CAACO,aAAN,IACLP,KAAD,CAAeQ,WAAf,CAA2BC,sBADrB,IAENC,QAAQ,CAACC,aAFX;AAGD;AAED,OAAO,IAAMC,YAAY,GACvBZ,KAD0B,IAEvBA,KAAK,CAACa,MAAN,KAAiB,CAFf","sourcesContent":["import { EventKeys } from \"@chakra-ui/utils\"\n\n/**\n * Get the normalized event key across all browsers\n * @param event keyboard event\n */\nexport function normalizeEventKey(event: React.KeyboardEvent) {\n  const { key, keyCode } = event\n\n  const isArrowKey =\n    keyCode >= 37 && keyCode <= 40 && key.indexOf(\"Arrow\") !== 0\n\n  const eventKey = isArrowKey ? `Arrow${key}` : key\n\n  return eventKey as EventKeys\n}\n\nexport function getRelatedTarget<E extends FocusEvent | React.FocusEvent>(\n  event: E,\n) {\n  return (event.relatedTarget ||\n    (event as any).nativeEvent.explicitOriginalTarget ||\n    document.activeElement) as HTMLElement\n}\n\nexport const isRightClick = <E extends MouseEvent | React.MouseEvent>(\n  event: E,\n) => event.button !== 0\n"],"file":"dom.js"}