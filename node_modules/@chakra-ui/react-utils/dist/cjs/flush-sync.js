"use strict";

exports.__esModule = true;
exports.withFlushSync = withFlushSync;

var _utils = require("@chakra-ui/utils");

var ReactDOM = _interopRequireWildcard(require("react-dom"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/** This is a workaround for React Concurrent Mode issue https://github.com/facebook/react/issues/18591. Remove once it's fixed. */
function withFlushSync(fn) {
  return function (event) {
    var flushSync = ReactDOM.flushSync;

    if ((0, _utils.isFunction)(flushSync)) {
      flushSync(function () {
        fn(event);
      });
    } else {
      fn(event);
    }
  };
}
//# sourceMappingURL=flush-sync.js.map