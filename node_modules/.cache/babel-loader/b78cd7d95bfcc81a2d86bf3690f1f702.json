{"ast":null,"code":"import _toConsumableArray from\"/Users/darionti/Desktop/WebDev/Periodistan/periodistan/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/darionti/Desktop/WebDev/Periodistan/periodistan/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{useState,useEffect}from'react';import{useHistory}from'react-router-dom';import Axios from'axios';import Post from'../../Components/Post';import Pagination from'react-bootstrap/Pagination';import'./stylePost.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function BlogPostAxios(){var _useState=useState([\"\"]),_useState2=_slicedToArray(_useState,2),thread0=_useState2[0],setThread0=_useState2[1];var _useState3=useState([\"\"]),_useState4=_slicedToArray(_useState3,2),thread1=_useState4[0],setThread1=_useState4[1];var _useState5=useState([\"\"]),_useState6=_slicedToArray(_useState5,2),thread2=_useState6[0],setThread2=_useState6[1];var _useState7=useState([\"\"]),_useState8=_slicedToArray(_useState7,2),thread3=_useState8[0],setThread3=_useState8[1];var _useState9=useState([\"\"]),_useState10=_slicedToArray(_useState9,2),thread4=_useState10[0],setThread4=_useState10[1];var _useState11=useState(1),_useState12=_slicedToArray(_useState11,2),currentPage=_useState12[0],setCurrentPage=_useState12[1];var _useState13=useState(''),_useState14=_slicedToArray(_useState13,2),numOfPosts=_useState14[0],setNumOfPosts=_useState14[1];var history=useHistory();var currentUrl=history.location.pathname;useEffect(function(){// First i store the post id from the URL into a variable.\nvar postId=parseInt(currentUrl.replace(/[^0-9]/g,\"\"));//Then I fetch into my database querying the Posts by ID\nif(currentUrl.slice(1,4)===\"afr\"){Axios.get(\"https://periodistan-threads.herokuapp.com/api/africa/\".concat(postId)).then(function(response){//Having the response i take the text part and the images and make a new Array to later turn into a full array that i will Map\nsetThread0([response.data[0].text_0].concat(_toConsumableArray(response.data[0].img_0.split(','))));setThread1([response.data[0].text_1].concat(_toConsumableArray(response.data[0].img_1.split(','))));setThread2([response.data[0].text_2].concat(_toConsumableArray(response.data[0].img_2.split(','))));setThread3([response.data[0].text_3].concat(_toConsumableArray(response.data[0].img_3.split(','))));//If the number of posts is 5 i will also retrieve that info. All posts have 4 or 5 pages\nif(response.data[0].posts===5){setThread4([response.data[0].text_4].concat(_toConsumableArray(response.data[0].img_4.split(','))));}setNumOfPosts(response.data[0].posts);});}else{Axios.get(\"https://periodistan-threads.herokuapp.com/api/america/\".concat(postId)).then(function(response){//Having the response i take the text part and the images and make a new Array to later turn into a full array that i will Map\nsetThread0([response.data[0].text_0].concat(_toConsumableArray(response.data[0].img_0.split(','))));setThread1([response.data[0].text_1].concat(_toConsumableArray(response.data[0].img_1.split(','))));setThread2([response.data[0].text_2].concat(_toConsumableArray(response.data[0].img_2.split(','))));setThread3([response.data[0].text_3].concat(_toConsumableArray(response.data[0].img_3.split(','))));//If the number of posts is 5 i will also retrieve that info. All posts have 4 or 5 pages\nif(response.data[0].posts===5){setThread4([response.data[0].text_4].concat(_toConsumableArray(response.data[0].img_4.split(','))));}setNumOfPosts(response.data[0].posts);});}},[currentUrl]);// ## Number of pages the Pagination will display. As i only want 1 post per page it is simple math.\nvar pageNumbers=[];for(var i=1;i<=numOfPosts/1;i++){pageNumbers.push(i);}// Get a new Array with every thread wich makes it easier to Map\nvar allThreads=[thread0,thread1,thread2,thread3,thread4];// ## Sets the current page using the Pagination.Item ID, wich is the same number as the page.\nfunction handleClick(e){setCurrentPage(Number(e.target.id));}return/*#__PURE__*/_jsxs(\"div\",{className:\"blogpost-container\",children:[/*#__PURE__*/_jsx(Post,{cardText:allThreads[currentPage-1][0],cardImage1:allThreads[currentPage-1][1],cardImage2:allThreads[currentPage-1][2],cardImage3:allThreads[currentPage-1][3],cardImage4:allThreads[currentPage-1][4],cardImage5:allThreads[currentPage-1][5]}),/*#__PURE__*/_jsx(Pagination,{children:pageNumbers.map(function(number){return/*#__PURE__*/_jsx(Pagination.Item,{id:number,onClick:handleClick,children:number},number);})})]});}","map":{"version":3,"sources":["/Users/darionti/Desktop/WebDev/Periodistan/periodistan/src/Pages/BlogPostAxiosPage/Index.js"],"names":["React","useState","useEffect","useHistory","Axios","Post","Pagination","BlogPostAxios","thread0","setThread0","thread1","setThread1","thread2","setThread2","thread3","setThread3","thread4","setThread4","currentPage","setCurrentPage","numOfPosts","setNumOfPosts","history","currentUrl","location","pathname","postId","parseInt","replace","slice","get","then","response","data","text_0","img_0","split","text_1","img_1","text_2","img_2","text_3","img_3","posts","text_4","img_4","pageNumbers","i","push","allThreads","handleClick","e","Number","target","id","map","number"],"mappings":"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","sourcesContent":["\nimport  React  from \"react\";\nimport {useState, useEffect} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport Axios from 'axios'\nimport Post from '../../Components/Post'\nimport Pagination from 'react-bootstrap/Pagination'\nimport './stylePost.css'\n\n\nexport default function BlogPostAxios(){\n\n  const [thread0, setThread0] = useState([\"\"])\n  const [thread1, setThread1] = useState([\"\"])\n  const [thread2, setThread2] = useState([\"\"])\n  const [thread3, setThread3] = useState([\"\"])\n  const [thread4, setThread4] = useState([\"\"])\n  \n \n  const [currentPage, setCurrentPage] = useState(1)\n  const [numOfPosts, setNumOfPosts] = useState('')\n\n  const history = useHistory()\n  const currentUrl = history.location.pathname\n\n  \n\n\n\n  useEffect(()=>{\n    // First i store the post id from the URL into a variable.\n    const postId = parseInt(currentUrl.replace(/[^0-9]/g, \"\"))\n    //Then I fetch into my database querying the Posts by ID\n  if(currentUrl.slice(1,4) === \"afr\"){Axios.get(`https://periodistan-threads.herokuapp.com/api/africa/${postId}`).then((response)=>{ \n      //Having the response i take the text part and the images and make a new Array to later turn into a full array that i will Map\n      setThread0([response.data[0].text_0, ...response.data[0].img_0.split(',')])\n      setThread1([response.data[0].text_1, ...response.data[0].img_1.split(',')])\n      setThread2([response.data[0].text_2, ...response.data[0].img_2.split(',')])\n      setThread3([response.data[0].text_3, ...response.data[0].img_3.split(',')])\n      //If the number of posts is 5 i will also retrieve that info. All posts have 4 or 5 pages\n      if(response.data[0].posts === 5){setThread4([response.data[0].text_4, ...response.data[0].img_4.split(',')])}\n      setNumOfPosts(response.data[0].posts)})}\n    else{\n      Axios.get(`https://periodistan-threads.herokuapp.com/api/america/${postId}`).then((response)=>{ \n      //Having the response i take the text part and the images and make a new Array to later turn into a full array that i will Map\n      setThread0([response.data[0].text_0, ...response.data[0].img_0.split(',')])\n      setThread1([response.data[0].text_1, ...response.data[0].img_1.split(',')])\n      setThread2([response.data[0].text_2, ...response.data[0].img_2.split(',')])\n      setThread3([response.data[0].text_3, ...response.data[0].img_3.split(',')])\n      //If the number of posts is 5 i will also retrieve that info. All posts have 4 or 5 pages\n      if(response.data[0].posts === 5){setThread4([response.data[0].text_4, ...response.data[0].img_4.split(',')])}\n      setNumOfPosts(response.data[0].posts)}\n      )}\n  }, [currentUrl])  \n\n// ## Number of pages the Pagination will display. As i only want 1 post per page it is simple math.\nconst pageNumbers = []\nfor (let i = 1; i <= numOfPosts / 1; i++){\n    pageNumbers.push(i)\n} \n\n// Get a new Array with every thread wich makes it easier to Map\nconst allThreads = [thread0, thread1, thread2, thread3, thread4]\n\n// ## Sets the current page using the Pagination.Item ID, wich is the same number as the page.\nfunction handleClick(e){\n  setCurrentPage(Number(e.target.id))\n}\n  return (\n      <div className='blogpost-container'>\n      {/* // ## Using the CurrentPage I choose wich of the posts i want to show */}\n\n            { <Post  \n                  cardText={allThreads[currentPage-1][0]}\n                  cardImage1={allThreads[currentPage-1][1]}\n                  cardImage2={allThreads[currentPage-1][2]}\n                  cardImage3={allThreads[currentPage-1][3]}\n                  cardImage4={allThreads[currentPage-1][4]}\n                  cardImage5={allThreads[currentPage-1][5]} \n                  />   } \n\n          <Pagination>\n          { pageNumbers.map(number => \n            ( <Pagination.Item \n                key={number} \n                id={number}\n                onClick={handleClick}\n                >{number}</Pagination.Item> )) \n          }\n          </Pagination>\n\n      </div>\n  )\n}\n  "]},"metadata":{},"sourceType":"module"}