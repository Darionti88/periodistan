{"ast":null,"code":"export function numberValidator(num) {\n  return new NumberValidator(num);\n}\nexport class NumberValidator {\n  constructor(num) {\n    this.isInt = () => {\n      if (Number.isInteger(this.n)) {\n        return this;\n      }\n\n      throw new Error(`Expected number to be an integer, got ${this.n}`);\n    };\n\n    this.isPositive = () => {\n      if (this.n > 0) {\n        return this;\n      }\n\n      throw new Error(`Expected number to be positive, got ${this.n}`);\n    };\n\n    this.lessThan = v => {\n      if (this.n < v) {\n        return this;\n      }\n\n      throw new Error(`Expected number to be less than ${v}, got ${this.n}`);\n    };\n\n    this.greaterThanOrEqual = v => {\n      if (this.n >= v) {\n        return this;\n      }\n\n      throw new Error(`Expected number to be greater than or equal to ${v}, got ${this.n}`);\n    };\n\n    this.greaterThan = v => {\n      if (this.n > v) {\n        return this;\n      }\n\n      throw new Error(`Expected number to be greater than ${v}, got ${this.n}`);\n    };\n\n    this.n = num;\n  }\n\n}","map":{"version":3,"sources":["../../src/validation.ts"],"names":[],"mappings":"AAAA,OAAM,SAAU,eAAV,CAA0B,GAA1B,EAAqC;AACzC,SAAO,IAAI,eAAJ,CAAoB,GAApB,CAAP;AACD;AAED,OAAM,MAAO,eAAP,CAAsB;AAE1B,EAAA,WAAA,CAAY,GAAZ,EAAuB;AAIhB,SAAA,KAAA,GAAQ,MAAW;AACxB,UAAI,MAAM,CAAC,SAAP,CAAiB,KAAK,CAAtB,CAAJ,EAA8B;AAC5B,eAAO,IAAP;AACD;;AACD,YAAM,IAAI,KAAJ,CAAU,yCAAyC,KAAK,CAAC,EAAzD,CAAN;AACD,KALM;;AAOA,SAAA,UAAA,GAAa,MAAW;AAC7B,UAAI,KAAK,CAAL,GAAS,CAAb,EAAgB;AACd,eAAO,IAAP;AACD;;AACD,YAAM,IAAI,KAAJ,CAAU,uCAAuC,KAAK,CAAC,EAAvD,CAAN;AACD,KALM;;AAOA,SAAA,QAAA,GAAY,CAAD,IAAoB;AACpC,UAAI,KAAK,CAAL,GAAS,CAAb,EAAgB;AACd,eAAO,IAAP;AACD;;AACD,YAAM,IAAI,KAAJ,CAAU,mCAAmC,CAAC,SAAS,KAAK,CAAC,EAA7D,CAAN;AACD,KALM;;AAOA,SAAA,kBAAA,GAAsB,CAAD,IAAoB;AAC9C,UAAI,KAAK,CAAL,IAAU,CAAd,EAAiB;AACf,eAAO,IAAP;AACD;;AACD,YAAM,IAAI,KAAJ,CACJ,kDAAkD,CAAC,SAAS,KAAK,CAAC,EAD9D,CAAN;AAGD,KAPM;;AASA,SAAA,WAAA,GAAe,CAAD,IAAoB;AACvC,UAAI,KAAK,CAAL,GAAS,CAAb,EAAgB;AACd,eAAO,IAAP;AACD;;AACD,YAAM,IAAI,KAAJ,CAAU,sCAAsC,CAAC,SAAS,KAAK,CAAC,EAAhE,CAAN;AACD,KALM;;AAjCL,SAAK,CAAL,GAAS,GAAT;AACD;;AAJyB","sourceRoot":"","sourcesContent":["export function numberValidator(num) {\n    return new NumberValidator(num);\n}\nexport class NumberValidator {\n    constructor(num) {\n        this.isInt = () => {\n            if (Number.isInteger(this.n)) {\n                return this;\n            }\n            throw new Error(`Expected number to be an integer, got ${this.n}`);\n        };\n        this.isPositive = () => {\n            if (this.n > 0) {\n                return this;\n            }\n            throw new Error(`Expected number to be positive, got ${this.n}`);\n        };\n        this.lessThan = (v) => {\n            if (this.n < v) {\n                return this;\n            }\n            throw new Error(`Expected number to be less than ${v}, got ${this.n}`);\n        };\n        this.greaterThanOrEqual = (v) => {\n            if (this.n >= v) {\n                return this;\n            }\n            throw new Error(`Expected number to be greater than or equal to ${v}, got ${this.n}`);\n        };\n        this.greaterThan = (v) => {\n            if (this.n > v) {\n                return this;\n            }\n            throw new Error(`Expected number to be greater than ${v}, got ${this.n}`);\n        };\n        this.n = num;\n    }\n}\n//# sourceMappingURL=validation.js.map"]},"metadata":{},"sourceType":"module"}