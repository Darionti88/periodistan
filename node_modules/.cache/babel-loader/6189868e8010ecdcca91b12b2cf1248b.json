{"ast":null,"code":"import _slicedToArray from\"/Users/darionti/Desktop/WebDev/Periodistan/periodistan/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Card from'../../Components/Card';import europa from'../../JsonThreads/europaThread.json';import asia from'../../JsonThreads/asiaThread.json';import{useLocation}from'react-router-dom';import Spinner from'react-bootstrap/Spinner';import'../stylesContinents.css';import{jsx as _jsx}from\"react/jsx-runtime\";export default function EuropaPage(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),thread=_useState2[0],setThread=_useState2[1];var location=useLocation().pathname;var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loaded=_useState4[0],setloaded=_useState4[1];useEffect(function(){setTimeout(function(){setloaded(true);},1000);},[]);useEffect(function(){var continent=location.slice(1,location.length);if(continent==='europa'){setThread(europa);}else{setThread(asia);}setTimeout(function(){setloaded(true);},1000);},[thread,location]);// ## I map the JSON file so i can get the cards with the title and image display. Depending on the direction the size of the card\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"grid-container\",children:!loaded?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:/*#__PURE__*/_jsx(Spinner,{animation:\"border\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"sr-only\",children:\"Loading...\"})})}):thread.map(function(item,index){if(item.direction==='horizontal'){return/*#__PURE__*/_jsx(Card,{cardClass:\"card card--horizontal\",linkTo:\"\".concat(location.slice(0,location.length-1),\"/\").concat(item.id),postId:item.id,title:item.title,fondo:item.background},index);}else if(item.direction==='vertical'){return/*#__PURE__*/_jsx(Card,{cardClass:\"card card--vertical\",linkTo:\"\".concat(location.slice(0,location.length-1),\"/\").concat(item.id),postId:item.id,title:item.title,fondo:item.background},index);}else{return/*#__PURE__*/_jsx(Card,{cardClass:\"card\",linkTo:\"\".concat(location.slice(0,location.length-1),\"/\").concat(item.id),postId:item.id,title:item.title,fondo:item.background},index);}})});}","map":{"version":3,"sources":["/Users/darionti/Desktop/WebDev/Periodistan/periodistan/client/src/Pages/ContinentPostsPage/Index.js"],"names":["React","useState","useEffect","Card","europa","asia","useLocation","Spinner","EuropaPage","thread","setThread","location","pathname","loaded","setloaded","setTimeout","continent","slice","length","map","item","index","direction","id","title","background"],"mappings":"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","sourcesContent":["import React, { useState, useEffect }  from 'react'\nimport Card from '../../Components/Card'\nimport europa from '../../JsonThreads/europaThread.json'\nimport asia from '../../JsonThreads/asiaThread.json'\nimport {useLocation} from 'react-router-dom'\nimport Spinner from 'react-bootstrap/Spinner'\nimport '../stylesContinents.css'\n\n\nexport default function EuropaPage(){\n\nconst [thread, setThread] = useState([])\nconst location = useLocation().pathname\n\nconst [loaded, setloaded] = useState(false)\n\n    useEffect(()=>{\n        setTimeout(()=>{\n        setloaded(true)}, 1000) \n    }, [])\n\n\nuseEffect(()=>{\n    const continent = location.slice(1, location.length)\n    if (continent === 'europa'){ setThread(europa)}\n    else{setThread(asia)}\n    setTimeout(()=>{\n        setloaded(true)}, 1000) \n}, [thread, location])\n    \n\n// ## I map the JSON file so i can get the cards with the title and image display. Depending on the direction the size of the card\n    return (\n        <div className='grid-container'>\n                { !loaded ? <div className='loading' >\n                                <Spinner  animation=\"border\" role=\"status\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </Spinner> \n                            </div> : thread.map((item, index)=> {\n                    if (item.direction === 'horizontal'){\n                        return <Card cardClass='card card--horizontal' linkTo={`${location.slice(0, location.length - 1)}/${item.id}`} postId={item.id} key={index}  title={item.title} fondo={item.background} /> }\n                    else if (item.direction === 'vertical'){\n                        return <Card cardClass='card card--vertical' linkTo={`${location.slice(0, location.length - 1)}/${item.id}`} postId={item.id} key={index} title={item.title} fondo={item.background}/> }\n                    else {\n                        return <Card cardClass='card' linkTo={`${location.slice(0, location.length - 1)}/${item.id}`}  postId={item.id} title={item.title} key={index} fondo={item.background} /> }\n                }) } \n        </div>\n    \n    )\n}"]},"metadata":{},"sourceType":"module"}