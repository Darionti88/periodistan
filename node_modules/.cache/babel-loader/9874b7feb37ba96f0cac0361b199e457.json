{"ast":null,"code":"import { numberValidator } from '../validation';\nexport default ((random, p = 0.5) => {\n  numberValidator(p).greaterThan(0).lessThan(1);\n  const invLogP = 1.0 / Math.log(1.0 - p);\n  return () => {\n    return Math.floor(1 + Math.log(random.next()) * invLogP);\n  };\n});","map":{"version":3,"sources":["../../../src/distributions/geometric.ts"],"names":[],"mappings":"AACA,SAAS,eAAT,QAAgC,eAAhC;AAEA,gBAAe,CAAC,MAAD,EAAiB,CAAC,GAAG,GAArB,KAA4B;AACzC,EAAA,eAAe,CAAC,CAAD,CAAf,CAAmB,WAAnB,CAA+B,CAA/B,EAAkC,QAAlC,CAA2C,CAA3C;AACA,QAAM,OAAO,GAAG,MAAM,IAAI,CAAC,GAAL,CAAS,MAAM,CAAf,CAAtB;AAEA,SAAO,MAAK;AACV,WAAO,IAAI,CAAC,KAAL,CAAW,IAAI,IAAI,CAAC,GAAL,CAAS,MAAM,CAAC,IAAP,EAAT,IAA0B,OAAzC,CAAP;AACD,GAFD;AAGD,CAPD","sourceRoot":"","sourcesContent":["import { numberValidator } from '../validation';\nexport default (random, p = 0.5) => {\n    numberValidator(p).greaterThan(0).lessThan(1);\n    const invLogP = 1.0 / Math.log(1.0 - p);\n    return () => {\n        return Math.floor(1 + Math.log(random.next()) * invLogP);\n    };\n};\n//# sourceMappingURL=geometric.js.map"]},"metadata":{},"sourceType":"module"}