{"ast":null,"code":"var _jsxFileName = \"/Users/darionti/Desktop/WebDev/Periodistan/periodistan/client/src/Pages/AmericaPage/Index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from '../../Components/Card';\nimport threads from '../../JsonThreads/americaThread.json';\nimport '../stylesContinents.css';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AmericaPage() {\n  _s();\n\n  const [loaded, setloaded] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setloaded(true);\n    }, 1000);\n  }, []); // ## I map the JSON file so i can get the cards with the title and image display. Depending on the direction the size of the card\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-container\",\n    children: loaded ? threads.map((item, index) => {\n      if (item.direction === 'horizontal') {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          cardClass: \"card card--horizontal\",\n          linkTo: `/amerika/${item.id}`,\n          postId: item.id,\n          title: item.title,\n          fondo: item.background\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 32\n        }, this);\n      } else if (item.direction === 'vertical') {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          cardClass: \"card card--vertical\",\n          linkTo: `/amerika/${item.id}`,\n          postId: item.id,\n          title: item.title,\n          fondo: item.background\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 32\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          cardClass: \"card\",\n          linkTo: `/amerika/${item.id}`,\n          postId: item.id,\n          title: item.title,\n          fondo: item.background\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 32\n        }, this);\n      }\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 48\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 22\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AmericaPage, \"3Tz5I5GXJj+NPwrAXDvJZVwFfVI=\");\n\n_c = AmericaPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AmericaPage\");","map":{"version":3,"sources":["/Users/darionti/Desktop/WebDev/Periodistan/periodistan/client/src/Pages/AmericaPage/Index.js"],"names":["React","useState","useEffect","Card","threads","Spinner","AmericaPage","loaded","setloaded","setTimeout","map","item","index","direction","id","title","background"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,OAAP,MAAoB,sCAApB;AACA,OAAO,yBAAP;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAIA,eAAe,SAASC,WAAT,GAAsB;AAAA;;AACjC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACVO,IAAAA,UAAU,CAAC,MAAI;AACfD,MAAAA,SAAS,CAAC,IAAD,CAAT;AAAgB,KADN,EACQ,IADR,CAAV;AAEH,GAHQ,EAGN,EAHM,CAAT,CAHiC,CAQrC;;AACI,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,cACWD,MAAM,GAAGH,OAAO,CAACM,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,KAAgB;AACpC,UAAID,IAAI,CAACE,SAAL,KAAmB,YAAvB,EAAoC;AAChC,4BAAO,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,uBAAhB;AAAwC,UAAA,MAAM,EAAG,YAAWF,IAAI,CAACG,EAAG,EAApE;AAAuE,UAAA,MAAM,EAAEH,IAAI,CAACG,EAApF;AAAqG,UAAA,KAAK,EAAEH,IAAI,CAACI,KAAjH;AAAwH,UAAA,KAAK,EAAEJ,IAAI,CAACK;AAApI,WAA6FJ,KAA7F;AAAA;AAAA;AAAA;AAAA,gBAAP;AAA2J,OAD/J,MAEK,IAAID,IAAI,CAACE,SAAL,KAAmB,UAAvB,EAAkC;AACnC,4BAAO,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAsC,UAAA,MAAM,EAAG,YAAWF,IAAI,CAACG,EAAG,EAAlE;AAAqE,UAAA,MAAM,EAAEH,IAAI,CAACG,EAAlF;AAAkG,UAAA,KAAK,EAAEH,IAAI,CAACI,KAA9G;AAAqH,UAAA,KAAK,EAAEJ,IAAI,CAACK;AAAjI,WAA2FJ,KAA3F;AAAA;AAAA;AAAA;AAAA,gBAAP;AAAuJ,OADtJ,MAEA;AACD,4BAAO,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAuB,UAAA,MAAM,EAAG,YAAWD,IAAI,CAACG,EAAG,EAAnD;AAAuD,UAAA,MAAM,EAAEH,IAAI,CAACG,EAApE;AAAwE,UAAA,KAAK,EAAEH,IAAI,CAACI,KAApF;AAAuG,UAAA,KAAK,EAAEJ,IAAI,CAACK;AAAnH,WAAgGJ,KAAhG;AAAA;AAAA;AAAA;AAAA,gBAAP;AAA0I;AACjJ,KAPW,CAAH,gBAOJ;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BAA0B,QAAC,OAAD;AAAU,QAAA,SAAS,EAAC,QAApB;AAA6B,QAAA,IAAI,EAAC,QAAlC;AAAA,+BAC7C;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAD6C;AAAA;AAAA;AAAA;AAAA,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AARb;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAxBuBN,W;;KAAAA,W","sourcesContent":["import React, {useState, useEffect}  from 'react'\nimport Card from '../../Components/Card'\nimport threads from '../../JsonThreads/americaThread.json'\nimport '../stylesContinents.css'\nimport Spinner from 'react-bootstrap/Spinner'\n\n\n\nexport default function AmericaPage(){\n    const [loaded, setloaded] = useState(false)\n\n    useEffect(()=>{\n        setTimeout(()=>{\n        setloaded(true)}, 1000) \n    }, [])\n\n// ## I map the JSON file so i can get the cards with the title and image display. Depending on the direction the size of the card\n    return (\n        <div className='grid-container'>\n                {  loaded ? threads.map((item, index)=> {\n                    if (item.direction === 'horizontal'){\n                        return <Card cardClass='card card--horizontal' linkTo={`/amerika/${item.id}`} postId={item.id} key={index}  title={item.title} fondo={item.background} /> }\n                    else if (item.direction === 'vertical'){\n                        return <Card cardClass='card card--vertical' linkTo={`/amerika/${item.id}`} postId={item.id} key={index} title={item.title} fondo={item.background}/> }\n                    else {\n                        return <Card cardClass='card' linkTo={`/amerika/${item.id}`}  postId={item.id} title={item.title} key={index} fondo={item.background} /> }\n                }) : <div className='loading' ><Spinner  animation=\"border\" role=\"status\">\n  <span className=\"sr-only\">Loading...</span>\n</Spinner> </div>  } \n        </div>\n    \n    )\n}"]},"metadata":{},"sourceType":"module"}