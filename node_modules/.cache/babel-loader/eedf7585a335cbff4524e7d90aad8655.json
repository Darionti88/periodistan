{"ast":null,"code":"var _jsxFileName = \"/Users/darionti/Desktop/WebDev/Periodistan/periodistan/client/src/Pages/ContinentPostsPage/Index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from '../../Components/Card';\nimport europa from '../../JsonThreads/europaThread.json';\nimport asia from '../../JsonThreads/asiaThread.json';\nimport world from '../../JsonThreads/worldThread.json';\nimport { useLocation } from 'react-router-dom';\nimport '../stylesContinents.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EuropaPage() {\n  _s();\n\n  const [thread, setThread] = useState([]);\n  const location = useLocation().pathname;\n  useEffect(() => {\n    const continent = location.slice(1, location.length);\n\n    if (continent === 'europa') {\n      setThread(europa);\n    } else if (continent === 'asia') {\n      setThread(asia);\n    } else {\n      setThread(world);\n    }\n\n    console.log(location.slice(0, location.length - 1));\n  }, [thread, location]); // ## I map the JSON file so i can get the cards with the title and image display. Depending on the direction the size of the card\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-container\",\n    children: thread.map((item, index) => {\n      if (item.direction === 'horizontal') {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          cardClass: \"card card--horizontal\",\n          linkTo: `${location.slice(0, location.length - 1)}/${item.id}`,\n          postId: item.id,\n          title: item.title,\n          fondo: item.background\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 32\n        }, this);\n      } else if (item.direction === 'vertical') {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          cardClass: \"card card--vertical\",\n          linkTo: `${location.slice(0, location.length - 1)}/${item.id}`,\n          postId: item.id,\n          title: item.title,\n          fondo: item.background\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 32\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          cardClass: \"card\",\n          linkTo: `${location.slice(0, location.length - 1)}/${item.id}`,\n          postId: item.id,\n          title: item.title,\n          fondo: item.background\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 32\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EuropaPage, \"IUvMaJ5F4z+Bu+mgDAOqMo9MdsM=\", false, function () {\n  return [useLocation];\n});\n\n_c = EuropaPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EuropaPage\");","map":{"version":3,"sources":["/Users/darionti/Desktop/WebDev/Periodistan/periodistan/client/src/Pages/ContinentPostsPage/Index.js"],"names":["React","useState","useEffect","Card","europa","asia","world","useLocation","EuropaPage","thread","setThread","location","pathname","continent","slice","length","console","log","map","item","index","direction","id","title","background"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA4C,OAA5C;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,IAAP,MAAiB,mCAAjB;AACA,OAAOC,KAAP,MAAkB,oCAAlB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAO,yBAAP;;AAGA,eAAe,SAASC,UAAT,GAAqB;AAAA;;AAEpC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMU,QAAQ,GAAGJ,WAAW,GAAGK,QAA/B;AAGAV,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMW,SAAS,GAAGF,QAAQ,CAACG,KAAT,CAAe,CAAf,EAAkBH,QAAQ,CAACI,MAA3B,CAAlB;;AACA,QAAIF,SAAS,KAAK,QAAlB,EAA2B;AAAEH,MAAAA,SAAS,CAACN,MAAD,CAAT;AAAkB,KAA/C,MACK,IAAGS,SAAS,KAAK,MAAjB,EAAyB;AAACH,MAAAA,SAAS,CAACL,IAAD,CAAT;AAAgB,KAA1C,MACA;AAACK,MAAAA,SAAS,CAACJ,KAAD,CAAT;AAAiB;;AACvBU,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACG,KAAT,CAAe,CAAf,EAAkBH,QAAQ,CAACI,MAAT,GAAkB,CAApC,CAAZ;AACH,GANQ,EAMN,CAACN,MAAD,EAASE,QAAT,CANM,CAAT,CANoC,CAepC;;AACI,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,cACWF,MAAM,CAACS,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,KAAgB;AAC1B,UAAID,IAAI,CAACE,SAAL,KAAmB,YAAvB,EAAoC;AAChC,4BAAO,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,uBAAhB;AAAwC,UAAA,MAAM,EAAG,GAAEV,QAAQ,CAACG,KAAT,CAAe,CAAf,EAAkBH,QAAQ,CAACI,MAAT,GAAkB,CAApC,CAAuC,IAAGI,IAAI,CAACG,EAAG,EAArG;AAAwG,UAAA,MAAM,EAAEH,IAAI,CAACG,EAArH;AAAsI,UAAA,KAAK,EAAEH,IAAI,CAACI,KAAlJ;AAAyJ,UAAA,KAAK,EAAEJ,IAAI,CAACK;AAArK,WAA8HJ,KAA9H;AAAA;AAAA;AAAA;AAAA,gBAAP;AAA4L,OADhM,MAEK,IAAID,IAAI,CAACE,SAAL,KAAmB,UAAvB,EAAkC;AACnC,4BAAO,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAsC,UAAA,MAAM,EAAG,GAAEV,QAAQ,CAACG,KAAT,CAAe,CAAf,EAAkBH,QAAQ,CAACI,MAAT,GAAkB,CAApC,CAAuC,IAAGI,IAAI,CAACG,EAAG,EAAnG;AAAsG,UAAA,MAAM,EAAEH,IAAI,CAACG,EAAnH;AAAmI,UAAA,KAAK,EAAEH,IAAI,CAACI,KAA/I;AAAsJ,UAAA,KAAK,EAAEJ,IAAI,CAACK;AAAlK,WAA4HJ,KAA5H;AAAA;AAAA;AAAA;AAAA,gBAAP;AAAwL,OADvL,MAEA;AACD,4BAAO,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAuB,UAAA,MAAM,EAAG,GAAET,QAAQ,CAACG,KAAT,CAAe,CAAf,EAAkBH,QAAQ,CAACI,MAAT,GAAkB,CAApC,CAAuC,IAAGI,IAAI,CAACG,EAAG,EAApF;AAAwF,UAAA,MAAM,EAAEH,IAAI,CAACG,EAArG;AAAyG,UAAA,KAAK,EAAEH,IAAI,CAACI,KAArH;AAAwI,UAAA,KAAK,EAAEJ,IAAI,CAACK;AAApJ,WAAiIJ,KAAjI;AAAA;AAAA;AAAA;AAAA,gBAAP;AAA2K;AAClL,KAPE;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA7BuBZ,U;UAGPD,W;;;KAHOC,U","sourcesContent":["import React, { useState, useEffect }  from 'react'\nimport Card from '../../Components/Card'\nimport europa from '../../JsonThreads/europaThread.json'\nimport asia from '../../JsonThreads/asiaThread.json'\nimport world from '../../JsonThreads/worldThread.json'\nimport {useLocation} from 'react-router-dom'\nimport '../stylesContinents.css'\n\n\nexport default function EuropaPage(){\n\nconst [thread, setThread] = useState([])\nconst location = useLocation().pathname\n\n\nuseEffect(()=>{\n    const continent = location.slice(1, location.length)\n    if (continent === 'europa'){ setThread(europa)}\n    else if(continent === 'asia') {setThread(asia)}\n    else {setThread(world)}\n    console.log(location.slice(0, location.length - 1))\n}, [thread, location])\n    \n\n// ## I map the JSON file so i can get the cards with the title and image display. Depending on the direction the size of the card\n    return (\n        <div className='grid-container'>\n                {  thread.map((item, index)=> {\n                    if (item.direction === 'horizontal'){\n                        return <Card cardClass='card card--horizontal' linkTo={`${location.slice(0, location.length - 1)}/${item.id}`} postId={item.id} key={index}  title={item.title} fondo={item.background} /> }\n                    else if (item.direction === 'vertical'){\n                        return <Card cardClass='card card--vertical' linkTo={`${location.slice(0, location.length - 1)}/${item.id}`} postId={item.id} key={index} title={item.title} fondo={item.background}/> }\n                    else {\n                        return <Card cardClass='card' linkTo={`${location.slice(0, location.length - 1)}/${item.id}`}  postId={item.id} title={item.title} key={index} fondo={item.background} /> }\n                })  } \n        </div>\n    \n    )\n}"]},"metadata":{},"sourceType":"module"}